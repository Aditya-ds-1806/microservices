swagger: "2.0"
info:
  description: "This is the User Interaction Service API documentation for the coding assignment of Backend Intern role at Pratilipi."
  version: "1.0.0"
  title: "User Interaction Service API"
  contact:
    email: "esd18i001@iiitdm.ac.in"
host: "127.0.0.1:3001"
basePath: "/"
tags:
- name: "User Interaction Service"
  description: "Read and update user interactions(likes and reads)"
schemes:
- "https"
- "http"
paths:
  /content/stats:
    get:
      tags:
      - "User Interaction Service"
      summary: "Get number of reads on all contents"
      description: "This is an **internal** API accessible only through the content service using a TOTP"
      parameters:
      - name: "x-totp"
        type: "string"
        in: "header"
        description: "TOTP obtained from TOTP_KEY"
      - name: "x-totp-generation-timestamp"
        type: "string"
        in: "header"
        description: "TOTP generation timestamp"
      produces:
      - "application/json"
      responses:
        "200":
          description: "successfully get likes+scores"
        "400":
          description: "mongoose `CastError` or `ValidationError`, bad inputs"
        "401":
          description: "request cannot be authorized, invalid TOTP"
        "500":
          description: "everything else"
  /content/reads/{contentId}:
    get:
      tags:
      - "User Interaction Service"
      summary: "Get number of reads on content by contentId"
      description: ""
      produces:
      - "application/json"
      parameters:
      - name: "contentId"
        in: "path"
        description: "Id of the content to count reads"
        required: true
        type: "string"
      responses:
        "200":
          description: "successfully deleted user"
        "400":
          description: "invalid id, mongoose `CastError` or `ValidationError`, bad inputs"
        "404":
          description: "contentId not found"
        "500":
          description: "everything else"
    put:
      tags:
      - "User Interaction Service"
      summary: "Update number of reads on content by contentId"
      description: ""
      produces:
      - "application/json"
      parameters:
      - name: "contentId"
        in: "path"
        description: "ID of content to update read count"
        required: true
        type: "string"
      - name: "userId"
        in: "query"
        description: "Id of the user who liked"
        required: true
        type: "string"
      responses:
        "200":
          description: "successfully updated number of reads on content"
        "400":
          description: "invalid id, mongoose `CastError` or `ValidationError`, bad inputs"
        "404":
          description: "user not found/content not found"
        "500":
          description: "everything else"
  /content/likes/{contentId}:
    get:
      tags:
      - "User Interaction Service"
      summary: "Get number of likes on content by contentId"
      description: ""
      produces:
      - "application/json"
      parameters:
      - name: "contentId"
        in: "path"
        description: "ID of content to count likes"
        required: true
        type: "string"
      responses:
        "200":
          description: "successfully read number of likes"
        "400":
          description: "invalid id, mongoose `CastError` or `ValidationError`, bad inputs"
        "404":
          description: "user not found/content not found"
        "500":
          description: "everything else"
    put:
      tags:
      - "User Interaction Service"
      summary: "Update number of likes on content by contentId"
      description: ""
      produces:
      - "application/json"
      parameters:
      - name: "contentId"
        in: "path"
        description: "ID of content to like/dislike"
        required: true
        type: "string"
      - name: "userId"
        in: "query"
        description: "ID of user who liked/disliked"
        required: true
        type: "string"
      responses:
        "200":
          description: "successfully updated likes on content"
        "400":
          description: "invalid id, mongoose `CastError` or `ValidationError`, bad inputs"
        "404":
          description: "user not found/content not found"
        "500":
          description: "everything else"
definitions:
  UserInteraction:
    type: "object"
    properties:
      id:
        type: "string"
        format: "mongoose.Schema.Types.ObjectId"
      likes:
        type: "array"
        items:
          type: "string"
          format: "mongoose.Schema.Types.ObjectId"
      reads:
        type: "array"
        items:
          type: "string"
          format: "mongoose.Schema.Types.ObjectId"
    xml:
      name: "User Interaction"
  API Response:
    type: "object"
    properties:
      status:
        type: "integer"
      data:
        type: "object"
      message:
        type: "string"
